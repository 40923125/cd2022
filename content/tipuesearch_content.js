var tipuesearch = {"pages": [{'title': 'About', 'text': '40923125 cd2022 \n', 'tags': '', 'url': 'About.html'}, {'title': '倉儲建立', 'text': '\n', 'tags': '', 'url': '倉儲建立.html'}, {'title': '小組連結', 'text': '根據\xa0 https://mde.tw/cd2022_guide/content/Grouping.html \xa0 中的 2b 程式執行, 配合 \xa0 https://mde.tw/studlist/2022spring/2a.txt \xa0 修改為能夠直接在頁面顯示各組員的 cd2022 倉儲與網頁連結, 以及各學員協同大分組倉儲與網頁連結 (例如: cd2022ag1). \n', 'tags': '', 'url': '小組連結.html'}, {'title': '建立方式', 'text': '利用 run 跑 grp_2022.py ,但需要更改取樣為 2a.txt ,並且調整小組之固定變數B改A \n from browser import html\nfrom browser import document\nimport random\n\nbrython_div = document["brython_div"]\n\n# 根據 href 與 content 將 html 元件中的 anchor 插入頁面\ndef makeLink(href, content):\n    brython_div <= html.A(content, href=href)\n    #brython_div <= html.BR()\n\naorb = "a"\nurl = "https://mde.tw/studlist/2022spring/2a.txt"\ncourse = "cd2022"\n# 從 url 讀取資料後, 以跳行符號分割資料進入數列後\n# 去除數列中的第一筆與最後一筆資料後可得每位學員所填的資料\ndata = open(url).read().split("\\n")[1:-1]\n#print(data)\n# 再以 \\t 分割每位學員的資料, \n#可以取得每位學員的學號, github 帳號與組別\nbig = []\nnum_github = {}\nfor i in data:\n    stud_no, github, grp_no = i.split("\\t")\n    #print(stud_no, github, grp_no)\n    big.append([stud_no, github, grp_no])\n    if github != "":\n        num_github[stud_no] = github\n    else:\n        num_github[stud_no] = stud_no\n#print(big)\n# 根據每一 element 的第三個 element sort\nbig.sort(key = lambda x: x[2])\n# big 已經按照組別排序\n#print(big)\nungrouped = []\ngrouped = []\nfor i in big:\n    if i[2] == "":\n        ungrouped.append(i[0])\n    else:\n        # 將組別放到第一位置\n        grouped.append([i[2], i[0]])\n#print(grouped)\n#print(ungrouped)\nd = {}\n# 逐一檢視 grouped 數列\nfor i in grouped:\n    # 若該組序已存在 d dict 中,\n    # 則以 extend() 納入除組序之外的組員學號\n    if i[0] in d:\n        d[i[0]].extend(i[1:])\n        #print("i[0] in d:",i[0], "d:", d)\n    else:\n        # 若已納分組的 element 中之組序為全新組序,\n        # 則將該已納分組的 element 放入 dict 首位元素\n        # 準備透過 extend() 納入其他組員學號\n        d[i[0]] = i\n        #print("i i[0] not in d:", i, "d:", d)\n#print("finally d:", d, "d.values():", d.values())\ngroup_member = list(d.values())\n# group_member 第一位為組序, 隨後為組員學號\n#print(group_member)\nrandom.shuffle(ungrouped)\n#print("ungrouped:" + str(len(ungrouped)))\ngrp = 1\ngroup = []\nfor i in group_member:\n    #print("grp " + str(i[0]) + ": num, " + str(len(i[1:])))\n    if len(i[1:]) < 8:\n        #print("can take " + str(8 - len(i[1:])) + "members")\n        # 若仍有學員未納組, 則可根據缺額補入學員學號\n        try:\n            #print("add " + str(ungrouped[:8-len(i[1:])]))\n            i.extend(list(ungrouped[:8-len(i[1:])]))\n            # 拿掉已經分配組別的學員學號\n            ungrouped = ungrouped[8-len(i[1:]):]\n        except:\n            #print("no member to add!")\n            pass\n    else:\n        #print("full")\n        pass\n    # 根據增量決定組序\n    i[0] = str(grp)\n    group.append(i)\n    grp += 1\n#print(group)\nfor i in group:\n    brython_div <= "第" + str(i[0]) + "組:" + html.BR()\n    grp_repo = course + aorb + "g" + str(i[0])\n    for num in i[1:]:\n        # num 為各組組員學號\n        #print(num)\n        studhref = "https://"+ str(num_github[num]) + ".github.io/" + course\n        repohref = "https://github.com/"+ str(num_github[num]) +"/"+course\n        grphref = "https://"+ str(num_github[num]) + ".github.io/" + grp_repo\n        grp_repohref = "https://github.com/"+ str(num_github[num]) +"/" + grp_repo       \n        brython_div <= "repo: "\n        makeLink(repohref, str(num))\n        brython_div <= " www: "\n        makeLink(studhref, str(num))\n        brython_div <= " " + grp_repo + "-repo: "\n        makeLink(grp_repohref, str(num))\n        brython_div <= " " + grp_repo + "-www: "\n        makeLink(grphref, str(num))\n        brython_div <= html.BR()\nprint("done") \n \n', 'tags': '', 'url': '建立方式.html'}, {'title': '結果', 'text': '第1組: repo: \xa0 40923101 \xa0 www: \xa0 40923101 \xa0 cd2022ag1-repo: \xa0 40923101 \xa0 cd2022ag1-www: \xa0 40923101 repo: \xa0 40923103 \xa0 www: \xa0 40923103 \xa0 cd2022ag1-repo: \xa0 40923103 \xa0 cd2022ag1-www: \xa0 40923103 repo: \xa0 40923108 \xa0 www: \xa0 40923108 \xa0 cd2022ag1-repo: \xa0 40923108 \xa0 cd2022ag1-www: \xa0 40923108 repo: \xa0 40923119 \xa0 www: \xa0 40923119 \xa0 cd2022ag1-repo: \xa0 40923119 \xa0 cd2022ag1-www: \xa0 40923119 repo: \xa0 40923137 \xa0 www: \xa0 40923137 \xa0 cd2022ag1-repo: \xa0 40923137 \xa0 cd2022ag1-www: \xa0 40923137 repo: \xa0 40923154 \xa0 www: \xa0 40923154 \xa0 cd2022ag1-repo: \xa0 40923154 \xa0 cd2022ag1-www: \xa0 40923154 repo: \xa0 40923156 \xa0 www: \xa0 40923156 \xa0 cd2022ag1-repo: \xa0 40923156 \xa0 cd2022ag1-www: \xa0 40923156 repo: \xa0 40971134 \xa0 www: \xa0 40971134 \xa0 cd2022ag1-repo: \xa0 40971134 \xa0 cd2022ag1-www: \xa0 40971134 第2組: repo: \xa0 40923102 \xa0 www: \xa0 40923102 \xa0 cd2022ag2-repo: \xa0 40923102 \xa0 cd2022ag2-www: \xa0 40923102 repo: \xa0 40923104 \xa0 www: \xa0 40923104 \xa0 cd2022ag2-repo: \xa0 40923104 \xa0 cd2022ag2-www: \xa0 40923104 repo: \xa0 40923105 \xa0 www: \xa0 40923105 \xa0 cd2022ag2-repo: \xa0 40923105 \xa0 cd2022ag2-www: \xa0 40923105 repo: \xa0 40923106 \xa0 www: \xa0 40923106 \xa0 cd2022ag2-repo: \xa0 40923106 \xa0 cd2022ag2-www: \xa0 40923106 repo: \xa0 40923107 \xa0 www: \xa0 40923107 \xa0 cd2022ag2-repo: \xa0 40923107 \xa0 cd2022ag2-www: \xa0 40923107 repo: \xa0 40923109 \xa0 www: \xa0 40923109 \xa0 cd2022ag2-repo: \xa0 40923109 \xa0 cd2022ag2-www: \xa0 40923109 repo: \xa0 40923110 \xa0 www: \xa0 40923110 \xa0 cd2022ag2-repo: \xa0 40923110 \xa0 cd2022ag2-www: \xa0 40923110 repo: \xa0 40923121 \xa0 www: \xa0 40923121 \xa0 cd2022ag2-repo: \xa0 40923121 \xa0 cd2022ag2-www: \xa0 40923121 第3組: repo: \xa0 40923114 \xa0 www: \xa0 40923114 \xa0 cd2022ag3-repo: \xa0 40923114 \xa0 cd2022ag3-www: \xa0 40923114 repo: \xa0 40923115 \xa0 www: \xa0 40923115 \xa0 cd2022ag3-repo: \xa0 40923115 \xa0 cd2022ag3-www: \xa0 40923115 repo: \xa0 40923122 \xa0 www: \xa0 40923122 \xa0 cd2022ag3-repo: \xa0 40923122 \xa0 cd2022ag3-www: \xa0 40923122 repo: \xa0 40923129 \xa0 www: \xa0 40923129 \xa0 cd2022ag3-repo: \xa0 40923129 \xa0 cd2022ag3-www: \xa0 40923129 repo: \xa0 40923146 \xa0 www: \xa0 40923146 \xa0 cd2022ag3-repo: \xa0 40923146 \xa0 cd2022ag3-www: \xa0 40923146 repo: \xa0 40923148 \xa0 www: \xa0 40923148 \xa0 cd2022ag3-repo: \xa0 40923148 \xa0 cd2022ag3-www: \xa0 40923148 repo: \xa0 40923153 \xa0 www: \xa0 40923153 \xa0 cd2022ag3-repo: \xa0 40923153 \xa0 cd2022ag3-www: \xa0 40923153 repo: \xa0 40923157 \xa0 www: \xa0 40923157 \xa0 cd2022ag3-repo: \xa0 40923157 \xa0 cd2022ag3-www: \xa0 40923157 第4組: repo: \xa0 40923128 \xa0 www: \xa0 40923128 \xa0 cd2022ag4-repo: \xa0 40923128 \xa0 cd2022ag4-www: \xa0 40923128 repo: \xa0 40923138 \xa0 www: \xa0 40923138 \xa0 cd2022ag4-repo: \xa0 40923138 \xa0 cd2022ag4-www: \xa0 40923138 repo: \xa0 40923111 \xa0 www: \xa0 40923111 \xa0 cd2022ag4-repo: \xa0 40923111 \xa0 cd2022ag4-www: \xa0 40923111 repo: \xa0 40923116 \xa0 www: \xa0 40923116 \xa0 cd2022ag4-repo: \xa0 40923116 \xa0 cd2022ag4-www: \xa0 40923116 repo: \xa0 40923124 \xa0 www: \xa0 40923124 \xa0 cd2022ag4-repo: \xa0 40923124 \xa0 cd2022ag4-www: \xa0 40923124 repo: \xa0 40923125 \xa0 www: \xa0 40923125 \xa0 cd2022ag4-repo: \xa0 40923125 \xa0 cd2022ag4-www: \xa0 40923125 repo: \xa0 40923126 \xa0 www: \xa0 40923126 \xa0 cd2022ag4-repo: \xa0 40923126 \xa0 cd2022ag4-www: \xa0 40923126 repo: \xa0 40923127 \xa0 www: \xa0 40923127 \xa0 cd2022ag4-repo: \xa0 40923127 \xa0 cd2022ag4-www: \xa0 40923127 第5組: repo: \xa0 40923120 \xa0 www: \xa0 40923120 \xa0 cd2022ag5-repo: \xa0 40923120 \xa0 cd2022ag5-www: \xa0 40923120 repo: \xa0 40923123 \xa0 www: \xa0 40923123 \xa0 cd2022ag5-repo: \xa0 40923123 \xa0 cd2022ag5-www: \xa0 40923123 repo: \xa0 40923133 \xa0 www: \xa0 40923133 \xa0 cd2022ag5-repo: \xa0 40923133 \xa0 cd2022ag5-www: \xa0 40923133 repo: \xa0 40923134 \xa0 www: \xa0 40923134 \xa0 cd2022ag5-repo: \xa0 40923134 \xa0 cd2022ag5-www: \xa0 40923134 repo: \xa0 40923135 \xa0 www: \xa0 40923135 \xa0 cd2022ag5-repo: \xa0 40923135 \xa0 cd2022ag5-www: \xa0 40923135 repo: \xa0 40923139 \xa0 www: \xa0 40923139 \xa0 cd2022ag5-repo: \xa0 40923139 \xa0 cd2022ag5-www: \xa0 40923139 repo: \xa0 40923142 \xa0 www: \xa0 40923142 \xa0 cd2022ag5-repo: \xa0 40923142 \xa0 cd2022ag5-www: \xa0 40923142 repo: \xa0 40923151 \xa0 www: \xa0 40923151 \xa0 cd2022ag5-repo: \xa0 40923151 \xa0 cd2022ag5-www: \xa0 40923151 第6組: repo: \xa0 40923113 \xa0 www: \xa0 40923113 \xa0 cd2022ag6-repo: \xa0 40923113 \xa0 cd2022ag6-www: \xa0 40923113 repo: \xa0 40923130 \xa0 www: \xa0 40923130 \xa0 cd2022ag6-repo: \xa0 40923130 \xa0 cd2022ag6-www: \xa0 40923130 repo: \xa0 40923131 \xa0 www: \xa0 40923131 \xa0 cd2022ag6-repo: \xa0 40923131 \xa0 cd2022ag6-www: \xa0 40923131 repo: \xa0 40923140 \xa0 www: \xa0 40923140 \xa0 cd2022ag6-repo: \xa0 40923140 \xa0 cd2022ag6-www: \xa0 40923140 repo: \xa0 40923144 \xa0 www: \xa0 40923144 \xa0 cd2022ag6-repo: \xa0 40923144 \xa0 cd2022ag6-www: \xa0 40923144 repo: \xa0 40923149 \xa0 www: \xa0 40923149 \xa0 cd2022ag6-repo: \xa0 40923149 \xa0 cd2022ag6-www: \xa0 40923149 repo: \xa0 40923150 \xa0 www: \xa0 40923150 \xa0 cd2022ag6-repo: \xa0 40923150 \xa0 cd2022ag6-www: \xa0 40923150 repo: \xa0 40923152 \xa0 www: \xa0 40923152 \xa0 cd2022ag6-repo: \xa0 40923152 \xa0 cd2022ag6-www: \xa0 40923152 第7組: repo: \xa0 40823132 \xa0 www: \xa0 40823132 \xa0 cd2022ag7-repo: \xa0 40823132 \xa0 cd2022ag7-www: \xa0 40823132 repo: \xa0 40823143 \xa0 www: \xa0 40823143 \xa0 cd2022ag7-repo: \xa0 40823143 \xa0 cd2022ag7-www: \xa0 40823143 repo: \xa0 40923117 \xa0 www: \xa0 40923117 \xa0 cd2022ag7-repo: \xa0 40923117 \xa0 cd2022ag7-www: \xa0 40923117 repo: \xa0 40923136 \xa0 www: \xa0 40923136 \xa0 cd2022ag7-repo: \xa0 40923136 \xa0 cd2022ag7-www: \xa0 40923136 repo: \xa0 40923143 \xa0 www: \xa0 40923143 \xa0 cd2022ag7-repo: \xa0 40923143 \xa0 cd2022ag7-www: \xa0 40923143 repo: \xa0 40923145 \xa0 www: \xa0 40923145 \xa0 cd2022ag7-repo: \xa0 40923145 \xa0 cd2022ag7-www: \xa0 40923145 repo: \xa0 40923147 \xa0 www: \xa0 40923147 \xa0 cd2022ag7-repo: \xa0 40923147 \xa0 cd2022ag7-www: \xa0 40923147 repo: \xa0 40923118 \xa0 www: \xa0 40923118 \xa0 cd2022ag7-repo: \xa0 40923118 \xa0 cd2022ag7-www: \xa0 40923118 \n', 'tags': '', 'url': '結果.html'}, {'title': '每周進度', 'text': 'W1 \n 建立IPV6連線,下載 cadlab_network_setup.zip ,並在被封鎖網路前執行1_ipv6_network_setup.bat啟動檔,如果成功將不會再跳出網路封鎖訊息。內建會自行將網路轉至IPV6並設定Proxy \n 利用學校Email或於學校網路下載 NX1980_cd2022.7z NX可攜式 \n W2 \n 利用 cmsimd 子模組建立cd2022倉儲 \n 利用 grp_2022.py 程式使用 2a.txt 表單跑出分組名單 \n w7 \n 利用隨身程式系統編譯\xa0 https://github.com/mdecourse/scarysim \xa0 中的 SCARA robot 模擬系統. 完成此 Qt C++ 程式碼的編譯與操作後, 接著請完成 CoppeliaSim 範例中 \xa0 MTB robot \xa0 所進行的 \xa0 Pick and Place demo . \n 完成結果 \n \n', 'tags': '', 'url': '每周進度.html'}, {'title': 'w10', 'text': '', 'tags': '', 'url': 'w10.html'}, {'title': 'w10_block_ui', 'text': '\n \n', 'tags': '', 'url': 'w10_block_ui.html'}, {'title': 'blog_add_wink', 'text': '<link rel="stylesheet" type="text/css" href="./../cmsimde/static/winkPlayer.css">\n<script type="text/javascript" src="./../cmsimde/static/winkPlayer.js"></script>\n<script>\nvar winkVideoData_w10_block_ui = {\n  dataVersion: 1,\n  frameRate: 10,\n  buttonFrameLength: 5,\n  buttonFrameOffset: 2,\n  frameStops: {\n  },\n};\n</script>\n<div class="winkVideoContainerClass" style="border: thin solid black; padding: 10px;"><video width="100%" height="100%" autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_w10_block_ui" muted="true">\n<source src="https://40923125.github.io/cd2022/downloads/w10.mp4" type="video/mp4" /></video></div> \n', 'tags': '', 'url': 'blog_add_wink.html'}, {'title': 'w8', 'text': 'uarm(NX) \n 軸承支撐圈 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 軸承支撐軸 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 電機軸承支撐座 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 減速箱上殼 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 主臂關節1 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 左側連桿 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 右側曲柄 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 右側連桿 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 三角形連桿 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 絞鍊 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 主臂關節2 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 末端連桿 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 前端關節 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n \n 組合 \n \n \n 零件.組合下載 \n uarm(NX) \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w3_NXvideo', 'text': 'video13 \n 參考工程圖利用NX繪製 \n 工程圖: \n \n 完成圖: \n \n 剖視圖: \n \n 檔案下載: \n w3_video13.prt \n 操作影片(前段): \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n 0 \n 操作影片(後段): \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n 0 \n video14 \n 繪製樂高積木後利用變數使積木產生不同規格 \n 工程圖: \n \n 完成圖: \n \n 下載檔: \n w3_video14.prt \n 操作影片: \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n video15 \n 下載 UM_Valve_Blank 零件組合出完整機構 \n 完成圖: \n \n 組合檔: \n w3_video15.prt \n 操作影片(前段): \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n 0 \n 操作影片(後段): \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w3_NXvideo.html'}, {'title': 'w12', 'text': '', 'tags': '', 'url': 'w12.html'}, {'title': 'NXOpen Python', 'text': '於NX內建立繪製群組 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n \n 於NX內導入外掛程式執行 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n \n 心得: \n 當你完全了解NX這套軟體時,會發現其內部有許多可以自定義的功能,可以將編寫完成的繪製程式碼導入NX,使其執行,可免除重複零件之繪製時間。也可以透過程式碼來控制多個零件尺寸,減少所需繪製的時間。 \n', 'tags': '', 'url': 'NXOpen Python.html'}, {'title': 'w13', 'text': 'CoppeliaSim於最近推出了rev3,將附加程式的使用與法新增python,所以這周主題是修改導入python程式位置,運行 CoppeliaSim內的範例--simplePythonExample.ttt,讓其可使用python程式運作。 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n', 'tags': '', 'url': 'w13.html'}, {'title': 'w14', 'text': '分別使用鍵盤及設置馬達參數來控制 MTB_nx robot:\xa0 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n', 'tags': '', 'url': 'w14.html'}, {'title': 'w16', 'text': '', 'tags': '', 'url': 'w16.html'}, {'title': 'Visualization_Stream', 'text': '\xa0 \xa0 於 課程網頁w16 下載 w15_uarm_tkinter_control.7z 、 w15_rotating_cuboid.7z 、 rotating_cuboid_flask.7z 三個壓縮檔並解壓縮。 \n 1.遠端控制uarm \n \xa0 \xa0(1)用coppeliaSim開啟tkinter_control內的uarm_nx_tkinter_gui_control.ttt或 \n \xa0 \xa0 \xa0 \xa0 uarm_nx_tkinter_gui_control_exhaustive.simscene.xml並開始模擬 \n \xa0 \xa0(2)利用SciTE開啟uarm_tkinter_control.py並執行會跳出下圖視窗 \n \xa0 \xa0 \xa0 \xa0 \n \xa0 \xa0(3)點擊To connect後將連結coppeliaSim模擬uarm的控制面板,使其可利用此程式進行 \n \xa0 \xa0 \xa0 \xa0遠端操作。 \n \xa0 \xa0 \xa0 \xa0 \n', 'tags': '', 'url': 'Visualization_Stream.html'}, {'title': 'rotating_cuboid', 'text': '遠端觀看 cuboid模擬 \n 如先前有操作 遠端控制uarm,因使用相同伺服器,需先結束伺服器的使用,才能操作。 \n \xa0 \xa0 (1) 用coppeliaSim開啟 rotating_cuboid內的rotating_cuboid.ttt \n \xa0 \xa0 (2) 利用SciTE開啟rotating_cuboid.py並執行會跳出兩個視窗,可由攝影機視角觀看物件 \n \xa0 \xa0 \xa0 \xa0 模擬 \n \xa0 \xa0 \xa0 \xa0\xa0 \n \xa0 \xa0 \xa0 \xa0 如要觀看網頁版則 利用SciTE開啟rotating_cuboid.py執行,將會於 \n \xa0 \xa0 \xa0 \xa0 \xa0 http://127.0.0.1:5000 顯示攝影機視角之畫面,可點擊左下連結切換攝影機 \n \xa0 \xa0 \xa0 \xa0 \xa0 \n', 'tags': '', 'url': 'rotating_cuboid.html'}, {'title': 'Online_Exam', 'text': '左側綠色基座uarm: \n joint1: L順時針2度;K 逆時針2度 \n joint2 :J 順時針1度; H 逆時針1度 \n joint3: G 順時針1度; F 逆時針1度 \n 右側桃色基座uarm: \n joint1:I 順時針2度;U 逆時針2度 \n joint2 :Y 順時針1度;T 逆時針1度 \n joint3:R 順時針1度;E 逆時針1度 \n \n \n Q1:已知左側綠色底座的 uArm 機械手臂, 其基座座標原點位於絕對座標 (1.0, 0.25, 0), 啟動模擬後 green_suctionpad_frame 座標原點則位於 (0.22859, 0.26047, 0.36576), 請列出運算式說明, 啟動模擬後 joint1, joint2 與 joint3 分別以逆時針旋轉 5 度後, 求 green_suctionpad_frame 的絕對座標值。 \n A1:(0.2663,0.1959,0.3891)但因數值震盪,誤差值0.005 \n \n Q2:已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心? \n A2:左側綠色基座uarm\xa0 joint1\xa0joint2\xa0joint3每按下一次快捷鍵(L,K,J,H,G,F)會旋轉一度,按下 L 5次;\xa0J 32次;\xa0G\xa035次即可到達紅色方塊中心, 故需 joint1順時針旋轉10度;joint2 順時針旋轉32度;joint3 順時針旋轉35度 \n \n', 'tags': '', 'url': 'Online_Exam.html'}, {'title': '期末考週', 'text': '1.反向 uarm 繪製 \n 我是使用NX12繪製反向uarm的,繪製期間發現組合約束時會因選取順序產生不一樣的結果,我在無法連接的約束以此方式可以解決,整個流程我覺得組合的部分最複雜,因為我組合時是憑感覺的,我也不知道要怎麼以影片呈現,所以只有製作 修改 "nx12絞鍊"與 "front joint" 零件的部分。 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 2.反向 uarm 三軸模擬(建立模擬說明) \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n 3.反向 uarm 三軸作動(小組討論) \n \n 心得: \n UI slider控制是使用上課時所講解的程式去做變化,採用NX12匯出的STL檔來進行CoppeliaSim 4.3.0 rev3模擬,因為我模擬時有問題,因此有詢問小組組員,藉由小組討論得出了最好的模擬結果,達到協同的目的。 \n 4.反向 uarm 吸起方塊 \n \n 心得: \n 一開始還不知道吸盤要怎麼接上去,後來觀看學長的影片得知可以利用joint定位,而吸盤自帶吸起功能,只要開啟碰撞就可吸起方塊,用模擬的方式來完成實體的模擬雖然不會有成本問題,但很耗時間。 \n 5.反向 uarm\xa0 跨網路 Python remote API 控制 \n \n 心得: \n 我們使用hamachi這套軟體建立內部網路,並利用其網路來遠端控制反向uarm,使用時覺得這種實作很有新鮮感,利用網路進入他人的電腦並操控,像個駭客。', 'tags': '', 'url': '期末考週.html'}]};